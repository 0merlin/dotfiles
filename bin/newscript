#!/usr/bin/env bash
# This is based on this article: http://brettterpstra.com/2018/05/07/shell-tricks-quick-start-scripts/
#
# I have modified it only slightly for my own usage
#

# Touch, make executable and start editing a new script
# $ newscript my_new_script.sh
# edit default shebangs within the function
# include additional skeleton files as [extension].txt
# in the $defaults_txt folder defined in config

# Config
# where your scripts are stored
# if no extension is provided, default to

default_ext=sh
# End config
filename="$1"

if [[ $# == 0 ]]; then # no argument, display help and exit
  echo -e "newscript: touch, make executable and \
start editing a new script.\n\033[31;1mError:\033[37;1m Missing filename\033[0m\n\n\
Usage: mynewscript SCRIPT_NAME.ext\n"
  exit 1
fi
ext=${filename#*.}
if [[ "$ext" == "$filename" ]]; then
  ext=$default_ext
fi
# if no script with this name already exists
if [ ! -f "$filename" ]; then
  # create a file for the given extension with appropriate shebang
  case $ext in
    py ) echo -e "#!/usr/bin/env python3" >> "$filename";;
    sh | bash ) echo -e "#!/usr/bin/env bash\nsource ~/dotfiles/bash_library.sh" >> "$filename";;
    md ) echo -e "# $USER\n# $(date +"%F %T")" >> "$filename" ;;
     * ) touch "$filename";; # any other extension create blank file
  esac
  # Add trailing newline to the new script
  echo -e "\n" >> "$filename"
  # Make it executable
  chmod 700 "$filename"
  echo -e "\033[32;1m$filename\033[0m"
  vim "$filename"
else # Specified filename already exists
  echo -e "\033[31;1mFile exists: $filename\033[0m"
fi
