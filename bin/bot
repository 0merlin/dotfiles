#bash
TOKEN="$(cat $HOME/.bot.token)"
PREVIOUS_UPDATE="$HOME/.bot.lastupdate"
URL='https://api.telegram.org/bot'
PEOPLE=~/people.bot

getMe() {
    curl -s "$URL$TOKEN/getMe" | jq -r '"\(.result.first_name) - \(.result.username)"'
}

sendMessage() {
    curl -s "$URL$TOKEN/sendMessage" -d chat_id="$1" -d text="$2" -d parse_mode="Markdown" | jq '.ok'
}

sendPhoto() {
    curl -s "$URL$TOKEN/sendPhoto" -F chat_id="$1" -F photo="@$2" | jq '.ok'
}

sendDocument() {
    curl -s "$URL$TOKEN/sendDocument" -F chat_id="$1" -F document="@$2" | jq '.ok'
}

sendLocation() {
    curl -s "$URL$TOKEN/sendLocation" -d chat_id="$1" -d latitude="$2" -d longitude="$3" | jq '.ok'
}

getUpdates() {
# { "update": ".update_id", "recevied_on": ".message.date", "userid": ".message.from.id", "username": ".message.from.username", "message": ".message.text" }

    last="0"
    if [ -e $PREVIOUS_UPDATE ]; then
        last="$(cat $PREVIOUS_UPDATE)"
    fi
    messages="$(curl -s "$URL$TOKEN/getUpdates?timeout=30&offset=$last" -d update_id="$1")"
    echo "$messages" | jq -c '.result[] | { "update": .update_id, "recevied_on": .message.date, "userid": .message.from.id, "username": .message.from.username, "message": .message.text}'
    echo "$messages" | jq -r '.result[] | "\(.message.from.username):\(.message.from.id)"' | while read a; do
        echo "$a" >> $PEOPLE
    done
    last="$(echo "$messages" | jq -r '.result[] | "\(.update_id)"' | while read a; do
        echo "$a"
    done | sort -n | tail -n1)"
    echo "$((last+1))" > $PREVIOUS_UPDATE

    sort -u $PEOPLE > $PEOPLE.tmp
    mv $PEOPLE.tmp $PEOPLE
}

case $1 in
    me)
        getMe
        ;;
    msg)
        sendMessage $2 "$3"
        ;;
    img)
        sendPhoto $2 "$3"
        ;;
    doc)
        sendDocument $2 "$3"
        ;;
    loc)
        sendLocation $2 "$3" "$4"
        ;;
    get)
        getUpdates $2
        ;;
    show)
        if [ -e $PEOPLE ]; then
            echo "People:"
            cat $PEOPLE
        else
            echo "No People Saved"
        fi
        ;;
    *)
        getUpdates 0
        ;;
esac
